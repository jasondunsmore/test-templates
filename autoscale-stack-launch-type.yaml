heat_template_version: 2015-10-15

description: This is a Heat template

parameters:
  key_name:
    type: string
    description : Name of a key pair to enable SSH access to instances.
    default: default
  flavor:
    type: string
    description: Flavor to use for the WordPress server.
    constraints:
      - custom_constraint: nova.flavor
    default: 4 GB Performance 
  image:
    type: string
    description: >
      Name or ID of the image to use for the WordPress server.
    default: CentOS 7 (PVHVM)
  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters

resources:
  asg_test:
    type: Rackspace::AutoScale::Group
    properties:
      groupConfiguration:
        name: { get_param: "OS::stack_name" }
        metadata:
          rax-heat: { get_param: "OS::stack_id" }
        maxEntities: 3
        minEntities: 1
        cooldown: 120
      launchConfiguration:
        type: launch_stack
        args:
          stack:
            template:
              heat_template_version: 2015-10-15
              description: This is a Heat template
              parameters:
                image:
                  default: CentOS 7 (PVHVM)
                  type: string
                flavor: 
                  default: 4 GB Performance
                  type: string
              resources:
                wp_config:
                  type: OS::Heat::SoftwareConfig
                  properties:
                    inputs:
                      - name: db_name
                      - name: db_user
                      - name: db_password
                      - name: db_ipaddr
                    group: script
                    config: |
                      #!/bin/bash -v
                      
                      yum -y install httpd wordpress
                      
                      sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
                      sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
                      sed -i s/database_name_here/$db_name/ /etc/wordpress/wp-config.php
                      sed -i s/username_here/$db_user/      /etc/wordpress/wp-config.php
                      sed -i s/password_here/$db_password/  /etc/wordpress/wp-config.php
                      sed -i s/localhost/$db_ipaddr/        /etc/wordpress/wp-config.php
                      
                      setenforce 0 # Otherwise net traffic with DB is disabled
                      
                      systemctl start httpd.service

                db_root_password:
                  type: OS::Heat::RandomString

                db_password:
                  type: OS::Heat::RandomString

                db_config:
                  type: OS::Heat::SoftwareConfig
                  properties:
                    inputs:
                      - name: db_rootpassword
                      - name: db_name
                      - name: db_user
                      - name: db_password
                    group: script
                    config: |
                      #!/bin/bash -v
                      
                      yum -y install mariadb mariadb-server
                      touch /var/log/mariadb/mariadb.log
                      chown mysql.mysql /var/log/mariadb/mariadb.log
                      systemctl start mariadb.service
                      
                      # Setup MySQL root password and create a user
                      mysqladmin -u root password $db_rootpassword
                      cat << EOF | mysql -u root --password=$db_rootpassword
                      CREATE DATABASE $db_name;
                      GRANT ALL PRIVILEGES ON $db_name.* TO '$db_user'@'%'
                      IDENTIFIED BY '$db_password';
                      FLUSH PRIVILEGES;
                      EXIT
                      EOF

                wp_deploy:
                  type: OS::Heat::SoftwareDeployment
                  depends_on: db_deployment
                  properties:
                    signal_transport: TEMP_URL_SIGNAL
                    config:
                      get_resource: wp_config
                    server:
                      get_resource: wp_server
                    input_values:
                      db_name: { get_param: db_name }
                      db_user: { get_param: db_username }
                      db_password: { get_attr: [ db_password, value ] }
                      db_root_password: { get_attr: [ db_root_password, value ] }
                      db_ipaddr: { get_attr: [ wordpress_instance, networks, private, 0 ] }

                wp_server:
                  type: OS::Nova::Server
                  properties:
                    image: {get_param: image}
                    flavor: 2 GB Performance
                    software_config_transport: POLL_TEMP_URL
                    user_data_format: SOFTWARE_CONFIG
                    user_data: {get_attr: [boot_config, config]}

              outputs:
                wordpress_url:
                  description: URL for Wordpress wiki
                  value:
                    str_replace:
                      template: http://host/wordpress
                      params:
                        host: { get_attr: [wp_server, networks, private, 0] }
                db_password:
                  description: Database password
                  value: { get_attr: [ db_password, value ] }
                db_root_password:
                  description: Database root password
                  value: { get_attr: [ db_root_password, value ] }

            disable_rollback: False
            environment:
              resource_registry:
                Heat::InstallConfigAgent: https://raw.githubusercontent.com/rackerlabs/heat-ci/master/dev/bootconfig.yaml
            parameters:
              flavor: {get_param: flavor}
              image: {get_param: image}
            timeout_mins: 30

